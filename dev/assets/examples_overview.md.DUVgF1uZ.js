import{_ as t,c as a,o as l,aA as i}from"./chunks/framework.BA5u_Yub.js";const u=JSON.parse('{"title":"Examples Overview","description":"","frontmatter":{},"headers":[],"relativePath":"examples/overview.md","filePath":"examples/overview.md","lastUpdated":null}'),r={name:"examples/overview.md"};function o(n,e,s,d,f,h){return l(),a("div",null,[...e[0]||(e[0]=[i('<h1 id="Examples-Overview" tabindex="-1">Examples Overview <a class="header-anchor" href="#Examples-Overview" aria-label="Permalink to &quot;Examples Overview {#Examples-Overview}&quot;">​</a></h1><p>This page provides an overview of <a href="https://github.com/PTsolvers/Chmy.jl" target="_blank" rel="noreferrer">Chmy.jl</a> examples. These selected examples demonstrate how Chmy.jl can be used to solve various numerical problems using architecture-agnostic kernels both on a single-device and in a distributed way.</p><h2 id="Table-of-Contents" tabindex="-1">Table of Contents <a class="header-anchor" href="#Table-of-Contents" aria-label="Permalink to &quot;Table of Contents {#Table-of-Contents}&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">Example</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://github.com/PTsolvers/Chmy.jl/blob/main/examples/diffusion_2d.jl" target="_blank" rel="noreferrer">Diffusion 2D</a></td><td style="text-align:left;">Solving the 2D diffusion equation on a uniform grid.</td></tr><tr><td style="text-align:left;"><a href="https://github.com/PTsolvers/Chmy.jl/blob/main/examples/diffusion_2d_mpi.jl" target="_blank" rel="noreferrer">Diffusion 2D with MPI</a></td><td style="text-align:left;">Solving the 2D diffusion equation on a uniform grid and distributed parallelisation using MPI.</td></tr><tr><td style="text-align:left;"><a href="https://github.com/PTsolvers/Chmy.jl/blob/main/examples/diffusion_2d_perf.jl" target="_blank" rel="noreferrer">Single-Device Performance Optimisation</a></td><td style="text-align:left;">Revisiting the 2D diffusion problem with focus on performance optimisation techniques on a single-device architecture.</td></tr><tr><td style="text-align:left;"><a href="https://github.com/PTsolvers/Chmy.jl/blob/main/examples/stokes_2d_inc_ve_T_mpi.jl" target="_blank" rel="noreferrer">Stokes 2D with MPI</a></td><td style="text-align:left;">Solving the 2D Stokes equation with thermal coupling on a uniform grid.</td></tr><tr><td style="text-align:left;"><a href="https://github.com/PTsolvers/Chmy.jl/blob/main/examples/stokes_3d_inc_ve_T_mpi.jl" target="_blank" rel="noreferrer">Stokes 3D with MPI</a></td><td style="text-align:left;">Solving the 3D Stokes equation with thermal coupling on a uniform grid and distributed parallelisation using MPI.</td></tr><tr><td style="text-align:left;"><a href="https://github.com/PTsolvers/Chmy.jl/blob/main/examples/diffusion_1d_mtl.jl" target="_blank" rel="noreferrer">Diffusion 1D with Metal</a></td><td style="text-align:left;">Solving the 1D diffusion equation using the Metal backend and single precision (<code>Float32</code>) on a uniform grid.</td></tr><tr><td style="text-align:left;"><a href="https://github.com/PTsolvers/Chmy.jl/blob/main/examples/grids_2d.jl" target="_blank" rel="noreferrer">2D Grid Visualization</a></td><td style="text-align:left;">Visualization of a 2D <code>StructuredGrid</code>.</td></tr><tr><td style="text-align:left;"><a href="https://github.com/PTsolvers/Chmy.jl/blob/main/examples/grids_3d.jl" target="_blank" rel="noreferrer">3D Grid Visualization</a></td><td style="text-align:left;">Visualization of a 3D <code>StructuredGrid</code>.</td></tr></tbody></table>',4)])])}const g=t(r,[["render",o]]);export{u as __pageData,g as default};
