import{_ as n,c as e,o as a,aA as s,j as i}from"./chunks/framework.BA5u_Yub.js";const C=JSON.parse('{"title":"Grids","description":"","frontmatter":{},"headers":[],"relativePath":"concepts/grids.md","filePath":"concepts/grids.md","lastUpdated":null}'),l={name:"concepts/grids.md"},o={tabindex:"0"},d={style:{"text-align":"left"}},r={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},h={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"18.467ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 8162.3 1000","aria-hidden":"true"},p={style:{"text-align":"left"}},k={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},c={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"12.81ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 5661.9 1000","aria-hidden":"true"},g={style:{"text-align":"left"}},Q={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},T={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"7.153ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 3161.4 683","aria-hidden":"true"};function u(m,t,y,E,f,x){return a(),e("div",null,[t[14]||(t[14]=s(`<h1 id="grids" tabindex="-1">Grids <a class="header-anchor" href="#grids" aria-label="Permalink to &quot;Grids&quot;">​</a></h1><p>The choice of numerical grid used depends on the type of equations to be resolved and affects the discretization schemes used. The design of the <code>Chmy.Grids</code> module aims to provide a robust yet flexible user API in customizing the numerical grids used for spatial discretization.</p><p>We currently support grids with quadrilateral cells. An <code>N</code>-dimensional numerical grid contains N spatial dimensions, each represented by an axis.</p><table tabindex="0"><thead><tr><th style="text-align:left;">Grid Properties</th><th style="text-align:left;">Description</th><th style="text-align:left;">Tunable Parameters</th></tr></thead><tbody><tr><td style="text-align:left;">Dimensions</td><td style="text-align:left;">The grid can be N-dimensional by having N axes.</td><td style="text-align:left;"><code>AbstractAxis</code></td></tr><tr><td style="text-align:left;">Distribution of Nodal Points</td><td style="text-align:left;">The grid can be regular (uniform distribution) or non-regular (irregular distribution).</td><td style="text-align:left;"><code>UniformAxis</code>, <code>FunctionAxis</code></td></tr><tr><td style="text-align:left;">Distribution of Variables</td><td style="text-align:left;">The grid can be non-staggered (collocated) or staggered, affecting how variables are positioned within the grid.</td><td style="text-align:left;"><code>Center</code>, <code>Vertex</code></td></tr></tbody></table><h2 id="axis" tabindex="-1">Axis <a class="header-anchor" href="#axis" aria-label="Permalink to &quot;Axis&quot;">​</a></h2><p>Objects of type <code>AbstractAxis</code> are building blocks of numerical grids. We can either define equidistant axes with <code>UniformAxis</code>, or parameterized axes with <code>FunctionAxis</code>.</p><h3 id="Uniform-Axis" tabindex="-1">Uniform Axis <a class="header-anchor" href="#Uniform-Axis" aria-label="Permalink to &quot;Uniform Axis {#Uniform-Axis}&quot;">​</a></h3><p>To define a uniform axis, we need to provide:</p><ul><li><p><code>Origin</code>: The starting point of the axis.</p></li><li><p><code>Extent</code>: The length of the section of the axis considered.</p></li><li><p><code>Cell Length</code>: The length of each cell along the axis.</p></li></ul><p>With the information above, an axis can be defined and incorporated into a spatial dimension. The <code>spacing</code> (with alias <code>Δ</code>) and <code>inv_spacing</code> (with alias <code>iΔ</code>) functions allow convenient access to the grid spacing (<code>Δx</code>/<code>Δy</code>/<code>Δz</code>) and its reciprocal, respectively.</p><h3 id="Function-Axis" tabindex="-1">Function Axis <a class="header-anchor" href="#Function-Axis" aria-label="Permalink to &quot;Function Axis {#Function-Axis}&quot;">​</a></h3><p>As an alternative, one could also define a <code>FunctionAxis</code> object using a function that parameterizes the spacing of the axis, together with the length of the axis.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ((i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">length </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parameterized_axis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> FunctionAxis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, length)</span></span></code></pre></div><h2 id="Structured-Grids" tabindex="-1">Structured Grids <a class="header-anchor" href="#Structured-Grids" aria-label="Permalink to &quot;Structured Grids {#Structured-Grids}&quot;">​</a></h2><p>A common mesh structure that is used for the spatial discretization in the finite difference approach is a structured grid (concrete type <code>StructuredGrid</code> or its alias <code>SG</code>).</p><p>We provide a function <code>UniformGrid</code> for creating an equidistant <code>StructuredGrid</code>, that essentially boils down to having axes of type <code>UniformAxis</code> in each spatial dimension.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># with architecture as well as numerics lx/y/z and nx/y/z defined</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">grid   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UniformGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arch;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    origin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ly</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lz</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    extent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lx, ly, lz),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nx, ny, nz))</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Metal backend</p><p>If using the Metal backend, ensure to use <code>Float32</code> (<code>f0</code>) element types in the <code>origin</code> and <code>extent</code> tuples when initialising the grid.</p></div><div class="tip custom-block"><p class="custom-block-title">Interactive Grid Visualization</p><ul><li><p><a href="https://github.com/PTsolvers/Chmy.jl/blob/main/examples/grids_2d.jl" target="_blank" rel="noreferrer">grids_2d.jl</a>: Visualization of a 2D <code>StructuredGrid</code></p></li><li><p><a href="https://github.com/PTsolvers/Chmy.jl/blob/main/examples/grids_3d.jl" target="_blank" rel="noreferrer">grids_3d.jl</a>: Visualization of a 3D <code>StructuredGrid</code></p></li></ul></div><img src="https://raw.githubusercontent.com/PTsolvers/Chmy.jl/main/docs/src/assets/grid_2d.png" width="50%"><img src="https://raw.githubusercontent.com/PTsolvers/Chmy.jl/main/docs/src/assets/grid_3d.png" width="50%"><h2 id="Location-on-a-Grid-Cell" tabindex="-1">Location on a Grid Cell <a class="header-anchor" href="#Location-on-a-Grid-Cell" aria-label="Permalink to &quot;Location on a Grid Cell {#Location-on-a-Grid-Cell}&quot;">​</a></h2><p>In order to allow full control over the distribution of different variables on the grid, we provide a high-level abstraction of the property location on a grid cell with the abstract type <code>Location</code>. More concretely, a property location along a spatial dimension can be either of concrete type <code>Center</code> or <code>Vertex</code> on a structured grid.</p><p>We illustrate how to specify the location within a grid cell on a fully staggered uniform grid. The following 2D example also has ghost nodes illustrated that are located immediately outside the domain boundary. <img src="https://raw.githubusercontent.com/PTsolvers/Chmy.jl/main/docs/src/assets/staggered_grid.png" width="80%"></p><p>In the following example, we zoom into a specific cell on a <strong>fully-staggered grid</strong>. By specifying for both x- and y-dimensions whether the node locates at the <code>Center</code> (C) or <code>Vertex</code> (V) along the respective axis, we can arrive in 4 categories of nodes on a 2D quadrilateral cell, which we refer to as &quot;basic&quot;, &quot;pressure&quot;, &quot;Vx&quot; and &quot;Vy&quot; nodes, following common practices. <img src="https://raw.githubusercontent.com/PTsolvers/Chmy.jl/main/docs/src/assets/staggered_grid_cell.png" width="50%"></p><p>If all variables are defined on basic nodes, specified by <code>(V,V)</code> locations, we have the simplest non-staggered <strong>collocated grid</strong>.</p><h2 id="Dimensions-of-Fields-on-Structured-Grids" tabindex="-1">Dimensions of Fields on Structured Grids <a class="header-anchor" href="#Dimensions-of-Fields-on-Structured-Grids" aria-label="Permalink to &quot;Dimensions of Fields on Structured Grids {#Dimensions-of-Fields-on-Structured-Grids}&quot;">​</a></h2><p>With a structured grid defined that consists of <code>nx = N</code> cells horizontally and <code>ny = M</code> cells vertically, we have the following dimensions for fields associated with the grid.</p>`,28)),i("table",o,[t[13]||(t[13]=i("thead",null,[i("tr",null,[i("th",{style:{"text-align":"left"}},"Node Type"),i("th",{style:{"text-align":"left"}},"Field Dimension"),i("th",{style:{"text-align":"left"}},"Location")])],-1)),i("tbody",null,[i("tr",null,[t[2]||(t[2]=i("td",{style:{"text-align":"left"}},"Cell vertex",-1)),i("td",d,[i("mjx-container",r,[(a(),e("svg",h,[...t[0]||(t[0]=[s('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1499.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(2499.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2999.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3610.7,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4610.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4999.9,0)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(6273.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(7273.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(7773.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g></g>',1)])])),t[1]||(t[1]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mo",{stretchy:"false"},"("),i("mi",null,"N"),i("mo",null,"+"),i("mn",null,"1"),i("mo",{stretchy:"false"},")"),i("mo",null,"×"),i("mo",{stretchy:"false"},"("),i("mi",null,"M"),i("mo",null,"+"),i("mn",null,"1"),i("mo",{stretchy:"false"},")")])],-1))])]),t[3]||(t[3]=i("td",{style:{"text-align":"left"}},[i("code",null,"(V, V)")],-1))]),i("tr",null,[t[6]||(t[6]=i("td",{style:{"text-align":"left"}},"X interface",-1)),i("td",p,[i("mjx-container",k,[(a(),e("svg",c,[...t[4]||(t[4]=[s('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1499.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(2499.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2999.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3610.7,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4610.9,0)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z" style="stroke-width:3;"></path></g></g></g>',1)])])),t[5]||(t[5]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mo",{stretchy:"false"},"("),i("mi",null,"N"),i("mo",null,"+"),i("mn",null,"1"),i("mo",{stretchy:"false"},")"),i("mo",null,"×"),i("mi",null,"M")])],-1))])]),t[7]||(t[7]=i("td",{style:{"text-align":"left"}},[i("code",null,"(V, C)")],-1))]),t[12]||(t[12]=i("tr",null,[i("td",{style:{"text-align":"left"}},"Y interface"),i("td",{style:{"text-align":"left"}},"$ N \\times (M + 1)$"),i("td",{style:{"text-align":"left"}},[i("code",null,"(C, V)")])],-1)),i("tr",null,[t[10]||(t[10]=i("td",{style:{"text-align":"left"}},"Cell Center",-1)),i("td",g,[i("mjx-container",Q,[(a(),e("svg",T,[...t[8]||(t[8]=[s('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1110.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2110.4,0)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z" style="stroke-width:3;"></path></g></g></g>',1)])])),t[9]||(t[9]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mi",null,"N"),i("mo",null,"×"),i("mi",null,"M")])],-1))])]),t[11]||(t[11]=i("td",{style:{"text-align":"left"}},[i("code",null,"(C, C)")],-1))])])]),t[15]||(t[15]=s(`<h2 id="Connectivity-of-a-StructuredGrid" tabindex="-1">Connectivity of a <code>StructuredGrid</code> <a class="header-anchor" href="#Connectivity-of-a-StructuredGrid" aria-label="Permalink to &quot;Connectivity of a \`StructuredGrid\` {#Connectivity-of-a-StructuredGrid}&quot;">​</a></h2><p>Using the method <code>connectivity(::SG{N,T,C}, ::Dim{D}, ::Side{S})</code>, one can obtain the connectivity underlying a structured grid. If no special grid topology is provided, a default <code>Bounded</code> grid topology is used for the <code>UniformGrid</code>. Therefore, on a default <code>UniformGrid</code>, the following assertions hold:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @assert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> connectivity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Side</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">isa</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Bounded </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Left boundary is bounded&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @assert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> connectivity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Side</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">isa</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Bounded </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Right boundary is bounded&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @assert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> connectivity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Side</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">isa</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Bounded </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Upper boundary is bounded&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @assert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> connectivity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Side</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">isa</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Bounded </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Lower boundary is bounded&quot;</span></span></code></pre></div>`,3))])}const F=n(l,[["render",u]]);export{C as __pageData,F as default};
